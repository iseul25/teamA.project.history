쿼리구문 예시(숫자 및 ''안의 단어는 예시입니다. -- 및 /* */ 안의 항목은 설명용이라 실제 구문에 반영되지 않습니다.)


/*point_transactions 테이블에 상점이용 생성*/
INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (2, NULL, 1, NULL, '상점이용');

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (3, NULL, 2, NULL, '상점이용');

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (5, NULL, 3, NULL, '상점이용');

/*상점이용에 따른 포인트 차감*/
UPDATE point_transactions pt
SET pointChange = - (SELECT cost FROM point_shop WHERE itemId = pt.itemId)
WHERE pt.itemId IS NOT NULL
  AND pt.attendanceId IS NULL
  AND pt.scoreId IS NULL;
  
  
/*point_transactions 테이블에 출석체크 생성*/
INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (2, 918, NULL, NULL, '출석체크');

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (3, 919, NULL, NULL, '출석체크');

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (5, 920, NULL, NULL, '출석체크');

/*출석체크에 따른 포인트 적립*/
UPDATE point_transactions pt
SET pointChange = (SELECT pointAdd FROM user_attendance WHERE attendanceId = pt.attendanceId)
WHERE pt.attendanceId IS NOT NULL
  AND pt.itemId IS NULL
  AND pt.scoreId IS NULL;
  
  
/* point_transactions 테이블에 퀴즈응시 생성*/
INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (2, NULL, NULL, 7, '퀴즈응시');

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (3, NULL, NULL, 8, '퀴즈응시');

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (5, NULL, NULL, 9, '퀴즈응시');

/*퀴즈응시에 따른 포인트 적립*/
UPDATE point_transactions pt
SET pointChange = (SELECT pointScore FROM quiz_score WHERE scoreId = pt.scoreId)
WHERE pt.scoreId IS NOT NULL
  AND pt.itemId IS NULL
  AND pt.attendanceId IS NULL;

-- 2번 유저의 totalPoint를 업데이트
UPDATE points
SET totalPoint = totalPoint + (SELECT pointChange FROM point_transactions WHERE transactionId = 17)
WHERE userId = 2;

UPDATE points
SET totalPoint = totalPoint + (SELECT pointChange FROM point_transactions WHERE transactionId = 20)
WHERE userId = 2;

UPDATE points
SET totalPoint = totalPoint + (SELECT pointChange FROM point_transactions WHERE transactionId = 23)
WHERE userId = 2;

-- 3번 유저의 totalPoint를 모두 업데이트
UPDATE points
SET totalPoint = totalPoint + (
    SELECT SUM(pointChange)
    FROM point_transactions
    WHERE transactionId IN (18, 21, 24)
)
WHERE userId = 3;

-- 5번 유저의 totalPoint를 모두 업데이트
UPDATE points
SET totalPoint = totalPoint + (
    SELECT SUM(pointChange)
    FROM point_transactions
    WHERE transactionId IN (19, 22, 25)
)
WHERE userId = 5;


-- (비효율적)2번 유저의 출석기록 추가와 그에 따른 포인트 적립
INSERT INTO user_attendance (userId, pointAdd) VALUES (2, 10);

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason) 
VALUES (2, 922, NULL, NULL, '출석체크');

UPDATE point_transactions pt
SET pointChange = (SELECT pointAdd FROM user_attendance WHERE attendanceId = pt.attendanceId)
WHERE pt.attendanceId IS NOT NULL
  AND pt.itemId IS NULL
  AND pt.scoreId IS NULL;
  
UPDATE points
SET totalPoint = totalPoint + (SELECT pointChange FROM point_transactions WHERE transactionId = 26)
WHERE userId = 2;


-- 3번 유저의 출석기록 추가와 그에 따른 포인트 적립
INSERT INTO user_attendance (userId, pointAdd) VALUES (3, 10);

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason, pointChange) 
SELECT 3, 923, NULL, NULL, '출석체크', pointAdd
FROM user_attendance
WHERE attendanceId = 923;

UPDATE points
SET totalPoint = totalPoint + (SELECT pointChange FROM point_transactions WHERE transactionId = 27)
WHERE userId = 3;

-- 5번 유저의 출석기록 추가와 그에 따른 포인트 적립
INSERT INTO user_attendance (userId, pointAdd) VALUES (5, 10);

INSERT INTO point_transactions (userId, attendanceId, itemId, scoreId, reason, pointChange) 
SELECT 5, 924, NULL, NULL, '출석체크', pointAdd
FROM user_attendance
WHERE attendanceId = 924;

UPDATE points
SET totalPoint = totalPoint + (SELECT pointChange FROM point_transactions WHERE transactionId = 28)
WHERE userId = 5;


-- 2번 유저의 포인트 총량과 사용내역 찾기
SELECT p/*(=points)*/.totalPoint, pt/*(=point_transactions)*/.*
FROM points p
JOIN point_transactions pt ON p.userId = pt.userId
WHERE p.userId = 2;
